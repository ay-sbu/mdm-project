# version: "0.0"

services:
  server-app:
    container_name: server-app
    build:
      context: ./server-app
    command: uvicorn config.asgi:application --host 0.0.0.0 --port 8000 --workers 4 --log-level debug --reload
    volumes:
      - ./server-app:/usr/src/app
      - $HOME/.cache/pip-docker/:/root/.cache/pip
    env_file:
      - ./env-vars/server-app.txt # you should create this file
    ports:
      - 8000:8000
    networks:
      - postgres
      - redisnet
      - rabbitnet
      - mongonet

    # depends_on:
    #   - redis

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - rabbitnet

  redis:
    image: redis:7.0.11-alpine
    ports:
      - "6379:6379"
    networks:
      - redisnet

  flower:
    image: mher/flower
    restart: always
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
    networks:
      - rabbitnet

  celery-worker:
    container_name: celery-worker
    build:
      context: ./server-app
    command: celery --app=config worker -l INFO -B
    volumes:
      - ./server-app:/usr/src/app
      - $HOME/.cache/pip-docker/:/root/.cache/pip
    env_file:
      - ./env-vars/server-app.txt # you should create this file
    networks:
      - postgres
      - redisnet
      - rabbitnet
      - mongonet

  ########################################################################### postgres
  db:
    image: postgres
    container_name: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: abbas
      POSTGRES_PASSWORD: 1
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_USERNAME: abbas
      PGADMIN_DEFAULT_EMAIL: abbas@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - postgres
  ########################################################################### end postgres

  mongodb:
    container_name: mongo
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: abbas
      MONGO_INITDB_ROOT_PASSWORD: 1
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - mongonet

  mongo-express:
    container_name: mongo_express
    image: mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: abbas
      ME_CONFIG_MONGODB_ADMINPASSWORD: 1
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
    depends_on:
      - mongodb
    networks:
      - mongonet

networks:
  elk:
    driver: bridge
  postgres:
    driver: bridge
  redisnet:
    driver: bridge
  rabbitnet:
    driver: bridge
  mongonet:
    driver: bridge

volumes:
  test_data:
  ls_data:
  kb_data:
  pg_data:
  pgadmin_data:
  mongo_data:
